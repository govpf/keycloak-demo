version: '3'

volumes:
  postgres_data:
    driver: local

services:
  postgres:
    image: 'postgres:alpine'
    volumes:
      - ./data/database/postgres:/var/lib/postgresql/data
    restart: 'always'
    environment:
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: password
      POSTGRES_DB: keycloak
      POSTGRES_HOST: postgres

  #traefik:
  #  image: library/traefik:alpine
  #  container_name: traefik
  #  volumes:
  #    - /var/run/docker.sock:/var/run/docker.sock
  #  command: >
  #    --logLevel=ERROR
  #    --api.dashboard
  #    --docker
  #    --entrypoints="Name:http Address::80"
  #    --defaultentrypoints="http"
  #  ports:
  #    - 80:80
  #    - 3000:8080

  traefik:
    image: traefik:2.4
    restart: unless-stopped
    ports:
      - 80:80
      - 443:443
      - 8080:8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./conf/traefik.toml:/traefik.toml

  keycloak:
    image: jboss/keycloak
    environment:
      DB_VENDOR: postgres
      DB_ADDR: postgres
      DB_PORT: 5432
      DB_DATABASE: keycloak
      DB_USER: keycloak
      DB_PASSWORD: password
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: Pa55w0rd
      # KEYCLOAK_LOGLEVEL: DEBUG
      # JGROUPS_DISCOVERY_PROTOCOL: JDBC_PING
      # JGROUPS_DISCOVERY_PROPERTIES: datasource_jndi_name=java:jboss/datasources/KeycloakDS,info_writer_sleep_time=500,initialize_sql="CREATE TABLE IF NOT EXISTS JGROUPSPING ( own_addr varchar(200) NOT NULL, cluster_name varchar(200) NOT NULL, created timestamp default current_timestamp, ping_data BYTEA, constraint PK_JGROUPSPING PRIMARY KEY (own_addr, cluster_name))"
    depends_on:
      - postgres
    labels:
      # traefik.enable: true
      # traefik.port: 8080
      # traefik.protocol: http
      # traefik.frontend.rule: Host:localhost
      # traefik.frontend.passHostHeader: true
      # traefik.backend.loadbalancer.stickiness: true
      traefik.enable: true
      traefik.http.routers.kc.rule: Host(`localhost`)
      traefik.http.routers.kc.entryPoints: insecure

  demo:
    build: ./apps/js-console/
    image: sitle/js-app
    labels:
      traefik.enable: true
      traefik.http.services.demo.loadbalancer.server.port: 80
      traefik.http.routers.demo.rule: Host(`demo.tst`)
      traefik.http.routers.demo.entryPoints: insecure

  maildev:
    image: maildev/maildev
    labels:
      traefik.enable: true
      traefik.http.services.maildev.loadbalancer.server.port: 80
      traefik.http.routers.maildev.rule: Host(`maildev.tst`)
      traefik.http.routers.maildev.entryPoints: insecure
  
  ldap_server:
    build: ./apps/ldap/
    image: sitle/ldap
    environment:
      LDAP_ADMIN_PASSWORD: test1234
      LDAP_BASE_DN: dc=demo,dc=tst
    ports:
      - 389:389
    #volumes:
    #  - ldap_data:/var/lib/ldap
    #  - ldap_config:/etc/ldap/slapd.d